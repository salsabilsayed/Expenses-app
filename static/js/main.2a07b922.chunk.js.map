{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","onSelectYear","target","value","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHight","maxValue","Math","round","style","height","Chart","dataPointsValues","dataPoints","datapoint","totalMax","max","label","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredItems","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveChanges","type","min","onClick","hideFormHandler","NewExpense","isEditing","setIsEditing","enteredData","random","console","log","onAddExpense","dummyExpenses","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a07b922.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nfunction Card(props){\r\n    const classes = 'card '+ props.className;\r\n    return (\r\n        \r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = props => {\r\n\r\n  const selectHandler = event =>{\r\n    props.onSelectYear(event.target.value);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={selectHandler} value={props.selected}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US',{month:'long'});\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n                <div className=\"expense-date__month\">{month}</div>\r\n                <div className=\"expense-date__year\">{year}</div>\r\n                <div className=\"expense-date__day\">{day}</div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import React, {useState} from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nfunction ExpenseItem(props){\r\n    \r\n    return(\r\n        <li>\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date}/>\r\n   \r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item__price\">{props.amount}</div>\r\n            </div>\r\n        </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n    if(props.items.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>Found No expenses.</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className='expenses-list'>\r\n            {props.items.map(expense => <ExpenseItem \r\n          key={expense.id}\r\n          title={expense.title} \r\n          amount={expense.amount}\r\n          date={expense.date}/>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n\r\n    let barFillHight = '0%';\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHight = Math.round((props.value/props.maxValue) * 100) + '%';\r\n    }\r\n    return ( \r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{height:barFillHight}}></div>\r\n            </div>\r\n            <div className='chart-bar__label'></div>\r\n        </div>\r\n     )\r\n}\r\n \r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\n\r\nimport './Chart.css'\r\n\r\nconst Chart = props => {\r\n    const dataPointsValues = props.dataPoints.map(datapoint => datapoint.value);\r\n    const totalMax = Math.max(...dataPointsValues);\r\n\r\n    return ( \r\n        <div className='chart'>\r\n            {props.dataPoints.map(datapoint => {\r\n                return <ChartBar \r\n                    key={datapoint.label}\r\n                    value={datapoint.value}\r\n                    maxValue={totalMax}\r\n                    label={datapoint.label}\r\n                />\r\n            })}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        { label:'Jan' , value: 0},\r\n        { label:'Feb' , value: 0},\r\n        { label:'Mar' , value: 0},\r\n        { label:'Apr' , value: 0},\r\n        { label:'May' , value: 0},\r\n        { label:'Jun' , value: 0},\r\n        { label:'Jul' , value: 0},\r\n        { label:'Aug' , value: 0},\r\n        { label:'Sep' , value: 0},\r\n        { label:'Oct' , value: 0},\r\n        { label:'Nov' , value: 0},\r\n        { label:'Dec' , value: 0},\r\n    ];\r\n\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return ( \r\n        <Chart dataPoints={chartDataPoints}/>\r\n     );\r\n}\r\n \r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nfunction Expenses(props){\r\n  const [filteredYear,setFilteredYear] = useState('2020');\r\n\r\n  const getSelectedYear = year => {\r\n    setFilteredYear(year);\r\n    \r\n  }\r\n\r\n  const filteredItems = props.expenses.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n    return(\r\n      <div>\r\n       \r\n        <Card className='expenses'>\r\n        <ExpensesFilter onSelectYear={getSelectedYear} selected={filteredYear}/>\r\n\r\n          <ExpensesChart expenses={filteredItems}/>\r\n          <ExpensesList items={filteredItems}/>\r\n          \r\n        </Card>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import React , {useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = props => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    // const [userInputs, setUserInputs] = useState({\r\n    //     enteredTitle:'',\r\n    //     enteredAmount:'',\r\n    //     enteredDate:''\r\n    // })\r\n    \r\n    const titleChangeHandler = event => {\r\n        setEnteredTitle(event.target.value);\r\n    //    setUserInputs({\r\n    //        ...userInputs,\r\n    //        enteredTitle: event.target.value\r\n    //    })\r\n    }\r\n\r\n    const amountChangeHandler= event => {\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInputs({\r\n        //     ...userInputs,\r\n        //     enteredAmount: event.target.value\r\n        // })\r\n    }\r\n\r\n    const dateChangeHandler = event => {\r\n        setEnteredDate(event.target.value);\r\n        // setUserInputs({\r\n        //     ...userInputs,\r\n        //     enteredDate: event.target.value\r\n        // })\r\n    }\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount:enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n\r\n        props.onSaveChanges(expenseData)\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' onChange={titleChangeHandler} value={enteredTitle}/>\r\n                </div>\r\n\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' onChange={amountChangeHandler} value={enteredAmount}/>\r\n                </div>\r\n\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' value={enteredDate} min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='new-expense__actions'>\r\n            <button type='button' onClick={props.hideFormHandler}>Cancel</button>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import React,{useState} from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css'\r\n\r\nconst NewExpense = props => {\r\n    const saveEnteredData = enteredData => {\r\n        const expenseData = {\r\n            ...enteredData,\r\n            id: Math.random().toString()\r\n        }\r\n        console.log(expenseData);\r\n        props.onAddExpense(expenseData);\r\n    }\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const appearHandler = () =>{\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const hideFormHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            {!isEditing && <button type='button' \r\n            onClick={appearHandler}>Add New Expense</button>}\r\n            \r\n            {isEditing && <ExpenseForm onSaveChanges={saveEnteredData}\r\n            hideFormHandler={hideFormHandler}/>}\r\n            \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import React, { useState } from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst dummyExpenses = [\n  {\n    id:'e1',\n    title:'Toilet Paper',\n    amount: '94.12',\n    date: new Date(2020,6,15)\n  },\n  {\n    id:'e2',\n    title:'New Tv',\n    amount: '799.49',\n    date: new Date(2020, 2, 12)\n  },\n  {\n    id:'e3',\n    title:'Car Insurance',\n    amount: '294.67',\n    date: new Date(2021, 4, 26)\n  }\n]\n\nfunction App() {\n  const [expenses, setExpenses] = useState(dummyExpenses);\n\n  const addExpenseHandler = expense =>{\n      setExpenses(prevExpenses => {\n        return [expense, ...prevExpenses];\n      })\n  }\n  \n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}